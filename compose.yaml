services:
  #  ollama:
  #    image: 'ollama/ollama:latest'
  #    ports:
  #      - '11434'
  collector:
    image: otel/opentelemetry-collector-contrib:0.123.0
    container_name: otel-container
    depends_on:
      prometheus:
        condition: service_healthy
      tempo:
        condition: service_healthy
      loki:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: 1
    volumes:
      - ./compose/otel-collector/config.yaml:/etc/otelcol-contrib/config.yaml:ro,z
    healthcheck:
      test: wget --tries=1 --spider -q http://localhost:13133
      start_period: 20s
      interval: 10s
      timeout: 1s
      retries: 12
    ports:
#      - 1888:1888 # pprof extension
#      - 8888:8888 # Prometheus metrics exposed by the collector
#      - 8889:8889 # Prometheus exporter metrics
#      - 13133:13133 # health_check extension
#      - 4317:4317 # OTLP gRPC receiver (for metrics and spans)
      - 4318:4318 # OTLP http receiver (for metrics and spans)
#      - 55679:55679 # zpages extension

  grafana:
    image: grafana/grafana:10.4.10 # https://hub.docker.com/r/grafana/grafana/tags
    container_name: grafana
    depends_on:
      prometheus:
        condition: service_healthy
      tempo:
        condition: service_healthy
      loki:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: 1
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - ./compose/grafana/grafana.ini:/etc/grafana/grafana.ini:ro,z
      - ./compose/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro,z
#      - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    healthcheck:
      test: wget --tries=1 --spider -q http://localhost:3000/api/health
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    ports:
      - "3000:3000"

  prometheus:
    image: prom/prometheus:v3.2.1 # https://hub.docker.com/r/prom/prometheus
    container_name: prometheus
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: 1
    command:
      - --enable-feature=exemplar-storage
      - --enable-feature=otlp-write-receiver
      - --web.enable-remote-write-receiver
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./compose/prometheus/config.yaml:/etc/prometheus/prometheus.yml:ro,z
    healthcheck:
      test: wget --tries=1 --spider -q http://localhost:9090/-/healthy
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
#    ports:
#      - "9090:9090"

  tempo:
    image: grafana/tempo:2.7.2 # https://hub.docker.com/r/grafana/tempo/tags and https://github.com/grafana/tempo/releases
    container_name: tempo
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: 1
    command: -config.file=/etc/custom-config.yaml
    volumes:
      - ./compose/tempo/config.yaml:/etc/custom-config.yaml:ro,z
    healthcheck:
      test: wget --tries=1 --spider -q http://localhost:3200/ready
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
#    ports:
#      - "3200:3200"    # tempo
#      - "4318:4318"  # otlp http

  loki:
    image: docker.io/grafana/loki:3.4
    container_name: loki
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: 1
    command: -config.file=/etc/loki/custom-config.yaml
    volumes:
      - ./compose/loki/config.yaml:/etc/loki/custom-config.yaml:ro,z
    healthcheck:
      test: wget --tries=1 --spider -q http://localhost:3100/ready
      start_period: 20s
      interval: 10s
      timeout: 1s
      retries: 12  # try for 2 minutes
#    ports:
#      - "3100:3100"